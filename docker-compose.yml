services:
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n-tweet-app
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - NODE_ENV=production
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n_secure_password
      - N8N_BASIC_AUTH_ACTIVE=false
      # - N8N_BASIC_AUTH_USER=admin
      # - N8N_BASIC_AUTH_PASSWORD=Admin123!
      - WEBHOOK_URL=http://localhost:5678
      - GENERIC_TIMEZONE=Asia/Tokyo
      - N8N_LOG_LEVEL=info
      - N8N_METRICS=true
      - EXECUTIONS_PROCESS=main
      - EXECUTIONS_MODE=regular
    volumes:
      - n8n_data:/home/node/.n8n
      - ./workflows:/home/node/.n8n/workflows
    depends_on:
      - postgres
    networks:
      - n8n-network

  postgres:
    image: postgres:15-alpine
    container_name: n8n-tweet-db
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n_secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - n8n-network

  redis:
    image: redis:7-alpine
    container_name: n8n-tweet-redis
    restart: unless-stopped
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data
    networks:
      - n8n-network
    command: redis-server --appendonly yes

  dashboard:
    build: .
    container_name: n8n-tweet-dashboard
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - DASHBOARD_PORT=3001
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=n8n
      - DB_USER=n8n
      - DB_PASSWORD=n8n_secure_password
      - JWT_SECRET=your-super-secure-jwt-secret-change-in-production
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./logs:/app/logs
      - ./cache:/app/cache
      - ./backups:/app/backups
      - ./config:/app/config
      - ./dashboard:/app/dashboard
    depends_on:
      - redis
      - postgres
    networks:
      - n8n-network
    command: npm run dashboard:backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  n8n_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  n8n-network:
    driver: bridge